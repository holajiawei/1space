[DEFAULT]
bind_port = 8080
workers = 0
user = swift
log_facility = LOG_LOCAL1
log_level = DEBUG
eventlet_debug = true

[pipeline:main]
# Yes, proxy-logging appears twice. This is not a mistake.
pipeline = healthcheck proxy-logging cache swift3 bulk tempurl authtoken keystoneauth tempauth cloud_sync_shunt versioned_writes slo dlo proxy-logging proxy-server

[app:proxy-server]
use = egg:swift#proxy
allow_account_management = true
account_autocreate = true

[filter:authtoken]
paste.filter_factory = keystonemiddleware.auth_token:filter_factory
www_authenticate_uri = http://1space-keystonehost:5000
auth_url = http://1space-keystone:35357
auth_plugin = password
project_domain_id = default
user_domain_id = default
project_name = service
username = swift
password = password
delay_auth_decision = True
cache = swift.cache
include_service_catalog = False

[filter:keystoneauth]
use = egg:swift#keystoneauth
reseller_prefix = KEY
operator_roles = admin
reseller_admin_role = admin
allow_overrides = true
service_roles =
default_domain_id = default
allow_names_in_acls = true

[filter:tempauth]
use = egg:swift#tempauth
user_admin_admin = admin .admin .reseller_admin
user_test_tester = testing .admin
user_test2_tester2 = testing2 .admin
user_test_tester3 = testing3
user_تacct_تuser = تpass .admin
user_تacct2_تuser2 = تpass2 .admin
user_nacct_nuser = npass .admin
user_nacct2_nuser2 = npass2 .admin
user_slashacct_slashuser = slashpass .admin

[filter:healthcheck]
use = egg:swift#healthcheck

[filter:cache]
use = egg:swift#memcache

[filter:proxy-logging]
use = egg:swift#proxy_logging

[filter:tempurl]
use = egg:swift#tempurl

[filter:bulk]
use = egg:swift#bulk

[filter:versioned_writes]
use = egg:swift#versioned_writes
allow_versioned_writes = true

[filter:slo]
use = egg:swift#slo
# max_manifest_segments = 1000
# max_manifest_size = 2097152
# min_segment_size = 1048576
# Start rate-limiting SLO segment serving after the Nth segment of a
# segmented object.
# rate_limit_after_segment = 10
#
# Once segment rate-limiting kicks in for an object, limit segments served
# to N per second. 0 means no rate-limiting.
# rate_limit_segments_per_sec = 0
#
# Time limit on GET requests (seconds)
# max_get_time = 86400

[filter:dlo]
use = egg:swift#dlo
# Start rate-limiting DLO segment serving after the Nth segment of a
# segmented object.
# rate_limit_after_segment = 10
#
# Once segment rate-limiting kicks in for an object, limit segments served
# to N per second. 0 means no rate-limiting.
# rate_limit_segments_per_sec = 1
#
# Time limit on GET requests (seconds)
# max_get_time = 86400

[filter:swift3]
use = egg:swift3#swift3
location = us-east-1
dns_compliant_bucket_names = False

[filter:cloud_sync_shunt]
use = egg:swift-s3-sync#cloud-shunt
conf_file = /1space/containers/1space/1space.conf
